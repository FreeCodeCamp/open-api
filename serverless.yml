service: serverless-graphql-apollo

frameworkVersion: ">=1.21.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  environment:
    AUTH0_CLIENT_ID: ${file(./src/config/secrets.js):getSecret.AUTH0_CLIENT_ID}
    AUTH0_CLIENT_SECRET: ${file(./src/config/secrets.js):getSecret.AUTH0_CLIENT_SECRET}
    AUTH0_NAMESPACE: ${file(./src/config/secrets.js):getSecret.AUTH0_NAMESPACE}
    GRAPHQL_ENDPOINT_URL: ${file(./src/config/secrets.js):getSecret.GRAPHQL_ENDPOINT_URL}
    JWT_CERT: ${file(./src/config/secrets.js):getSecret.JWT_CERT}
    MONGODB_URL: ${file(./src/config/secrets.js):getSecret.MONGODB_URL}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"

plugins:
  - serverless-webpack
  - serverless-offline-scheduler
  - serverless-offline
  - serverless-plugin-notification-ojongerius
  - serverless-plugin-aws-alerts

custom:
  serverless-offline:
    port: 4000
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  notification:
    webhook:
      url: ${env:GITTER_WEBHOOK}
  notifications:
    - protocol email
      endpoint freecodecampalerts+otto.jongerius@gmail.com
    - protocol https # Announce on Gitter
      endpoint https://webhooks.gitter.im/e/957145b550e13c6d3a80
  alerts:
    stages: # Optionally - select which stages to deploy alarms to
      - production
      - staging
    dashboards: true
    topics:
      ok: ${self:service}-${opt:stage}-alerts-ok
        notifications: ${self:custom.notifications}
      alarm: ${self:service}-${opt:stage}-alerts-alarm
        notifications: ${self:custom.notifications}
      insufficientData: ${self:service}-${opt:stage}-alerts-insufficientData
        notifications: ${self:custom.notifications}
    alarms:
      - functionThrottles
      - functionErrors
      - functionInvocations
      - functionDuration

functions:
  graphql:
    handler: src/handler.graphqlHandler
    events:
    - http:
        path: graphql
        method: post
        cors: true

  api:
    handler: src/handler.apiHandler
    events:
    - http:
        path: api
        method: get
        cors: true
